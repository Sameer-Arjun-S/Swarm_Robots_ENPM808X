# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install some system pacakges
      - name: Install ROS 2 Humble packages
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt update && sudo apt install -y curl
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
            -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) \
            signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
            http://packages.ros.org/ros2/ubuntu \
            $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
            | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update
          sudo apt install -y ros-humble-ros-base python3-colcon-common-extensions
          sudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
          sudo apt install -y lcov

      # Configure CMake flags and build exectables
      - name: Configure CMake flags and build exectables
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --cmake-args -DCOVERAGE=1 --packages-select hydra
          cat log/latest_build/hydra/stdout_stderr.log
          find build/hydra/ | grep -E 'gcno' # catch error -- exepct to see .gcno files
      
      # Run unit test and also check c++ code (and others) for style and static coding errors
      - name: Run unit test and check code error
        run: |
          source /opt/ros/humble/setup.bash
          colcon test --packages-select hydra
          cat log/latest_test/hydra/stdout_stderr.log
          find build/hydra/ | grep -E 'gcda' # catch error -- expect to see .gcda files
          colcon test-result --test-result-base build/hydra/ # catch error
      
      # Generate code coverage test report
      - name: Generate test coverage report
        run: |
          source install/setup.bash
          ros2 run hydra generate_coverage_report.bash

      # Upload coverage result to CodeCov
      - name: Upload coverage result to CodeCov
        uses: codecov/codecov-action@v3
        env:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ${{github.workspace}}/install/hydra/lib/hydra/coverage_cleaned.info     
